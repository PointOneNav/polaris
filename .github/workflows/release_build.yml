# Build Polaris examples and generate releases.
name: Polaris Build

on:
  push:
    # Build on a push to any branch.
    branches:
      - '*'
    # Build on a push of any tag named v* (v1.0, etc.) and generate a release.
    tags:
      - 'v*'

jobs:
  # Build the example applications.
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, armv7hf, aarch64]
    steps:
    - uses: actions/checkout@v2

    - name: Use Bazel 3.3.0
      uses: abhinavsingh/setup-bazel@v3
      with:
        version: 3.3.0

    - name: Build (native x64)
      if: matrix.arch == 'x64'
      run: |
        bazel build -c opt //examples:*
    - name: Build (cross-compile)
      if: matrix.arch != 'x64'
      run: |
        bazel build -c opt --config=${{ matrix.arch }} //examples:*

    - name: Create artifact
      run: |
        bazel query 'kind("cc_binary", //examples:*)' 2>/dev/null |
        sed -e 's|//examples:|bazel-bin/examples/|' |
        xargs tar czf polaris_examples.tar.gz --transform 's|^bazel-bin|polaris|'

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        path: polaris_examples.tar.gz
        name: polaris_examples.${{ matrix.arch }}

  # Create a release only on a tag (not on a branch push).
  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  upload:
    name: Upload Release Assets
    needs: [release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, armv7hf, aarch64]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: polaris_examples.${{ matrix.arch }}
    - name: Set asset filename
      id: release_info
      env:
        TAG_REF_NAME: ${{ github.ref }}
      run: |
        # polaris_examples-v1.0.0.aarch64.tar.gz
        echo ::set-output name=file_name::polaris_examples-${TAG_REF_NAME##*/v}.${{ matrix.arch }}.tar.gz
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: polaris_examples.${{ matrix.arch }}/polaris_examples.tar.gz
        asset_name: ${{ steps.release_info.outputs.file_name }}
        asset_content_type: application/tar+gzip
